syntax = "proto3";

package proto;

option go_package = "proto/";

message Topic {
  int64 id = 1;
  int64 category_id = 2;
  string title = 3;
  string description = 4;
  string created_at = 5;
}

message Post {
  int64 id = 1;
  int64 topic_id = 2;
  int64 author_id = 3;
  string title = 4;
  string content = 5;
  string created_at = 6;
}

message Comment {
  int64 id = 1;
  int64 post_id = 2;
  int64 author_id = 3;
  string content = 4;
  string created_at = 5;
}

message Category {
  int64 id = 1;
  string name = 2;
}

message GetTopicRequest {
  int64 id = 1;
}

message GetTopicResponse {
  Topic topic = 1;
}

message GetTopicsRequest {
  int64 category_id = 1;
}

message GetTopicsResponse {
  repeated Topic topics = 1;
}

message CreateTopicRequest {
  int64 category_id = 1;
  string title = 2;
  string description = 3;
}

message CreateTopicResponse {
  Topic topic = 1;
}

message UpdateTopicRequest {
  int64 id = 1;
  string title = 2;
  string description = 3;
}

message UpdateTopicResponse {
  Topic topic = 1;
}

message DeleteTopicRequest {
  int64 id = 1;
}

message DeleteTopicResponse {}

message GetPostsRequest {
  int64 topic_id = 1;
}

message GetPostsResponse {
  repeated Post posts = 1;
}

message GetPostRequest {
  int64 post_id = 1;
}

message GetPostResponse {
  Post post = 1;
}

message CreatePostRequest {
  int64 topic_id = 1;
  int64 author_id = 2;
  string title = 3;
  string content = 4;
}

message CreatePostResponse {
  Post post = 1;
}

message UpdatePostRequest {
  int64 id = 1;
  string title = 2;
  string content = 3;
}

message UpdatePostResponse {
  Post post = 1;
}

message DeletePostRequest {
  int64 id = 1;
}

message DeletePostResponse {}

message GetCommentsRequest {
  int64 post_id = 1;
}

message GetCommentsResponse {
  repeated Comment comments = 1;
}

message CreateCommentRequest {
  int64 post_id = 1;
  int64 author_id = 2;
  string content = 3;
}

message CreateCommentResponse {
  Comment comment = 1;
}

message UpdateCommentRequest {
  int64 id = 1;
  string content = 2;
}

message UpdateCommentResponse {
  Comment comment = 1;
}

message DeleteCommentRequest {
  int64 id = 1;
}

message DeleteCommentResponse {}

message GetCategoriesRequest {}

message GetCategoriesResponse {
  repeated Category categories = 1;
}

message CreateCategoryRequest {
  string name = 1;
}

message CreateCategoryResponse {
  Category category = 1;
}

message UpdateCategoryRequest {
  int64 id = 1;
  string name = 2;
}

message UpdateCategoryResponse {
  Category category = 1;
}

message DeleteCategoryRequest {
  int64 id = 1;
}

message DeleteCategoryResponse {}

service ForumService {
  rpc GetTopics(GetTopicsRequest) returns (GetTopicsResponse);
  rpc CreateTopic(CreateTopicRequest) returns (CreateTopicResponse);
  rpc UpdateTopic(UpdateTopicRequest) returns (UpdateTopicResponse);
  rpc DeleteTopic(DeleteTopicRequest) returns (DeleteTopicResponse);
  rpc GetPosts(GetPostsRequest) returns (GetPostsResponse);
  rpc GetPost(GetPostRequest) returns (GetPostResponse);
  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse);
  rpc UpdatePost(UpdatePostRequest) returns (UpdatePostResponse);
  rpc DeletePost(DeletePostRequest) returns (DeletePostResponse);
  rpc GetComments(GetCommentsRequest) returns (GetCommentsResponse);
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
  rpc UpdateComment(UpdateCommentRequest) returns (UpdateCommentResponse);
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);
  rpc GetCategories(GetCategoriesRequest) returns (GetCategoriesResponse);
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse);
  rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryResponse);
  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse);
  rpc GetTopic(GetTopicRequest) returns (GetTopicResponse);
}